{"version":3,"sources":["utils/utils.ts","stores/dayStore.ts","stores/monthStore.ts","stores/store.ts","stores/statisticsStore.ts","stores/createdHabitsStore.ts","stores/modalStore.ts","stores/tutorialStore.ts","components/AddHabitButton.tsx","components/BouncyText.tsx","components/Info.tsx","components/AddHabitForm.tsx","components/BackToTop.tsx","components/Checkbox.tsx","components/DeleteButton.tsx","components/DeleteHabitButton.tsx","components/HabitEntry.tsx","components/CalendarHeaderDayCard.tsx","components/CalendarHeader.tsx","components/Checkmark.tsx","components/EditCreatedHabitForm.tsx","components/CreatedHabitContainerElement.tsx","components/CreatedHabitsContainer.tsx","components/DayCard.tsx","components/HideDaysButton.tsx","components/Modal.tsx","components/StatisticsContent.tsx","components/StatisticsLegend.tsx","components/Statistics.tsx","components/GitHubIcon.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["saveToStorage","key","data","window","localStorage","setItem","JSON","stringify","getFromStorage","parse","getItem","shortenText","text","length","b","split","splice","push","checkAllCompletedHabits","day","habits","every","el","completed","completionStyles","color","refStyles","completionStylesHighlited","buttonStyles","checkCompletion","currentDay","highlight","ref","passedDay","completedDay","todoDay","currentD","weekend","passed","dayNumber","weekDay","DAYS","MONTH","STATISTICS","HABITS","TUTORIALS","now","DateTime","MonthStore","currentMonth","reset","init","checkNewMonth","monthLong","setNewMonth","clearCurrentMonth","makeAutoObservable","this","store","dayStore","days","generateDays","monthStore","removeItem","createData","daysInMonth","startOfMonth","startOf","i","id","uuidv4","plus","weekdayShort","addHabit","habit","find","completeHabit","dayId","habitId","state","dayIndex","findIndex","habitIndex","removeHabit","clearHabits","forEach","clearDaysOfHabit","habitName","filter","checkPassedDays","missed","statisticsStore","increaseMissedCount","renameHabit","newName","map","checkExistance","loadStatistics","statistics","addToStats","h","findHabit","toDo","reduceHabitCount","increaseCompletedCount","index","reduceCompletedCount","foundHabit","reduceMissedCount","clearStatistics","createdHabitsStore","currentlySelectedHabit","open","openModal","closeModal","includes","modalStore","tutorialStore","tutorials","addTutorial","name","checked","markChecked","item","console","log","StoreContext","createContext","useStore","useContext","AddHabitButton","handleSubmit","styling","xmlns","className","viewBox","fill","onClick","type","fillRule","d","clipRule","BouncyText","observer","content","tutName","useEffect","Popup","on","position","pinned","trigger","stroke","strokeLinecap","strokeLinejoin","strokeWidth","AddHabitForm","enableReinitialize","initialValues","error","onSubmit","values","resetForm","validationSchema","Yup","required","placeholder","BackToTop","href","Checkbox","disabled","onChange","e","target","aria-hidden","focusable","DeleteButton","DeleteHabitButton","deleteButtonStyles","useDrop","accept","drop","collect","monitor","isOver","borderAroundCurrentDay","undefined","onDoubleClick","location","hoverable","basic","style","backgroundColor","paddingRight","weekday","CalendarHeader","Checkmark","EditCreatedHabitForm","changeEditMode","setErrors","errors","autoFocus","useState","editMode","setEditMode","useDrag","isDragging","drag","prev","sticky","setSticky","addEventListener","pageYOffset","dayCardMonthStyle","cardNumberStyles","HideDaysButton","hidden","setHidden","onYes","onClose","onNo","Modal","size","Header","Actions","StatisticsContent","additionalStyle","StatisticsLegend","Math","round","GitHubIcon","version","preserveAspectRatio","setDays","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.bbb9d8d9.chunk.js","sourcesContent":["import { Day } from '../models/day';\r\nimport { store } from '../stores/store';\r\n\r\nexport const saveToStorage = <T>(key: string, data: T) => {\r\n  window.localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nexport const getFromStorage = <T>(key: string): T => {\r\n  return JSON.parse(window.localStorage.getItem(key)!);\r\n};\r\n\r\nexport const removeFromStorage = (key: string) => {\r\n  window.localStorage.removeItem(key);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  store.dayStore.clearHabits();\r\n  store.statisticsStore.clearStatistics();\r\n  store.monthStore.clearCurrentMonth();\r\n  store.createdHabitsStore.clearHabits();\r\n};\r\n\r\nexport const shortenText = (text: string, length: number) => {\r\n  if (text.length > length) {\r\n    const a = text.split('');\r\n    const b = a.splice(0, length);\r\n    b.push('.');\r\n    b.push('.');\r\n    b.push('.');\r\n    return b;\r\n  }\r\n  return text;\r\n};\r\n\r\nexport const checkAllCompletedHabits = (day: Day) => {\r\n  return day.habits.length && day.habits.every((el) => el.completed);\r\n};\r\n\r\nconst completionStyles = (color: string) => {\r\n  return `bg-${color}-300 text-${color}-700`;\r\n};\r\n\r\nconst refStyles = (color: string) => {\r\n  return `bg-${color}-200`;\r\n};\r\n\r\nconst completionStylesHighlited = (color: string) => {\r\n  return `hover:bg-${color}-500 hover:text-${color}-200`;\r\n};\r\n\r\nexport const buttonStyles = (color: string) => {\r\n  return `fill-current text-${color}-700 hover:text-${color}-400 cursor-pointer transform hover:scale-125 duration-75`;\r\n};\r\nexport const inputOutline = () => {\r\n  return `text-blue-600 placeholder-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent`;\r\n};\r\n\r\nexport const checkCompletion = (\r\n  day: Day,\r\n  currentDay: number,\r\n  highlight: boolean,\r\n  ref?: boolean\r\n) => {\r\n  const passedDay = `${completionStyles('blue')} ${\r\n    highlight && completionStylesHighlited('blue')\r\n  } ${ref && refStyles('blue')}`;\r\n  const completedDay = `${completionStyles('green')} ${\r\n    highlight && completionStylesHighlited('green')\r\n  } ${ref && refStyles('green')}`;\r\n  const todoDay = `${completionStyles('yellow')} ${\r\n    highlight && completionStylesHighlited('yellow')\r\n  } ${ref && refStyles('yellow')}`;\r\n  const currentD = `${completionStyles('pink')} ${\r\n    highlight && completionStylesHighlited('pink')\r\n  } ${ref && refStyles('pink')}`;\r\n\r\n  const weekend = `${completionStyles('red')} ${\r\n    highlight && completionStylesHighlited('red')\r\n  }`;\r\n\r\n  if (day.passed && checkAllCompletedHabits(day)) {\r\n    return completedDay;\r\n  } else if (day.passed) {\r\n    return passedDay;\r\n  }\r\n  if (currentDay === day.dayNumber) {\r\n    if (checkAllCompletedHabits(day)) {\r\n      return completedDay;\r\n    }\r\n    return currentD;\r\n  } else if (checkAllCompletedHabits(day)) {\r\n    return completedDay;\r\n  } else if (day.weekDay === 'Sat' || day.weekDay === 'Sun') {\r\n    return weekend;\r\n  }\r\n  return todoDay;\r\n};\r\n\r\n//keys for localstorage\r\nexport const DAYS = 'days';\r\nexport const MONTH = 'month';\r\nexport const STATISTICS = 'statistics';\r\nexport const HABITS = 'habits';\r\nexport const TUTORIALS = 'tutorials';\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Day } from '../models/day';\r\nimport { DateTime } from 'luxon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  DAYS,\r\n  getFromStorage,\r\n  removeFromStorage,\r\n  saveToStorage,\r\n} from '../utils/utils';\r\nimport { Habit } from '../models/habit';\r\nimport { store } from './store';\r\nconst now = DateTime.now();\r\n\r\nexport default class DayStore {\r\n  days: Day[] = [];\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  generateDays = () => {\r\n    let data = getFromStorage<Day[]>(DAYS);\r\n    if (!data) {\r\n      this.createData();\r\n    } else if (store.monthStore.checkNewMonth) {\r\n      //new month started\r\n      this.days = [];\r\n      removeFromStorage(DAYS);\r\n      this.createData();\r\n      return;\r\n    }\r\n    //still in current month => load data\r\n    this.days = getFromStorage<Day[]>(DAYS);\r\n  };\r\n\r\n  createData = () => {\r\n    const daysInMonth = now.daysInMonth;\r\n    const startOfMonth = DateTime.now().startOf('month');\r\n    for (let i = 1; i < daysInMonth + 1; i++) {\r\n      this.days.push({\r\n        id: uuidv4(),\r\n        dayNumber: i,\r\n        habits: [],\r\n        weekDay: startOfMonth.plus({ days: i - 1 }).weekdayShort,\r\n        passed: false,\r\n      });\r\n    }\r\n    saveToStorage(DAYS, this.days);\r\n  };\r\n\r\n  addHabit = (id: string, habit: Habit) => {\r\n    let day = this.days.find((el) => el.id === id);\r\n    if (day) {\r\n      day.habits.push(habit);\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  completeHabit = (dayId: string, habitId: string, state: boolean) => {\r\n    let dayIndex = this.days.findIndex((el) => el.id === dayId);\r\n    if (dayIndex === 0 || dayIndex) {\r\n      const habitIndex = this.days[dayIndex].habits.findIndex(\r\n        (el) => el.id === habitId\r\n      );\r\n      this.days[dayIndex].habits[habitIndex].completed = state;\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  removeHabit = (dayId: string, habitId: string) => {\r\n    const dayIndex = this.days.findIndex((el) => el.id === dayId);\r\n    if (dayIndex === 0 || dayIndex) {\r\n      const habitIndex = this.days[dayIndex].habits.findIndex(\r\n        (el) => el.id === habitId\r\n      );\r\n      this.days[dayIndex].habits.splice(habitIndex, 1);\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  clearHabits = () => {\r\n    this.days.forEach((day) => (day.habits = []));\r\n    saveToStorage<Day[]>(DAYS, this.days);\r\n  };\r\n\r\n  clearDaysOfHabit = (habitName: string) => {\r\n    for (let i = 0; i < this.days.length; i++) {\r\n      const day = this.days[i];\r\n      day.habits = day.habits.filter((habit) => habit.habitName !== habitName);\r\n    }\r\n    saveToStorage<Day[]>(DAYS, this.days);\r\n  };\r\n\r\n  checkPassedDays = () => {\r\n    for (let i = 0; i < store.monthStore.currentDay - 1; i++) {\r\n      const day = this.days[i];\r\n      day.passed = true;\r\n      day.habits.forEach((el) => {\r\n        if (!el.completed && !el.missed) {\r\n          store.statisticsStore.increaseMissedCount(el);\r\n        }\r\n      });\r\n    }\r\n    saveToStorage<Day[]>(DAYS, this.days);\r\n  };\r\n\r\n  renameHabit = (habit: string, newName: string) => {\r\n    if (\r\n      this.days.every(\r\n        (day) => !day.habits.find((el) => el.habitName === newName)\r\n      )\r\n    ) {\r\n      for (let i = 0; i < this.days.length; i++) {\r\n        const day = this.days[i];\r\n        day.habits = day.habits.map((el) =>\r\n          el.habitName === habit ? { ...el, habitName: newName } : el\r\n        );\r\n      }\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  checkExistance = (newName: string) => {\r\n    return this.days.every((day) =>\r\n      day.habits.find((el) => el.habitName === newName)\r\n    );\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { DateTime } from 'luxon';\r\nimport { getFromStorage, MONTH, saveToStorage } from '../utils/utils';\r\nimport { Month } from '../models/month';\r\n\r\nexport class MonthStore {\r\n  currentMonth = '';\r\n  currentDay = DateTime.now().day;\r\n  reset = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  init = () => {\r\n    const data = getFromStorage<Month>(MONTH);\r\n    //first time with no data whatsoever\r\n    if (!data) {\r\n      this.currentMonth = DateTime.now().monthLong;\r\n      this.reset = false;\r\n      saveToStorage<Month>(MONTH, {\r\n        currentMonth: this.currentMonth,\r\n        reset: this.reset,\r\n      });\r\n      //data exists\r\n    } else if (data) {\r\n      this.currentMonth = data.currentMonth;\r\n      this.reset = data.reset;\r\n      if (this.checkNewMonth) {\r\n        //set reset flag to create new data\r\n        this.reset = true;\r\n        this.currentMonth = DateTime.now().monthLong;\r\n      }\r\n    }\r\n  };\r\n\r\n  get checkNewMonth() {\r\n    return this.currentMonth !== DateTime.now().monthLong;\r\n  }\r\n\r\n  setNewMonth = () => {\r\n    this.currentMonth = DateTime.now().monthLong;\r\n  };\r\n\r\n  clearCurrentMonth = () => {\r\n    this.currentMonth = DateTime.now().monthLong;\r\n    this.reset = false;\r\n    saveToStorage<Month>(MONTH, {\r\n      currentMonth: this.currentMonth,\r\n      reset: this.reset,\r\n    });\r\n  };\r\n}\r\n\r\nexport default MonthStore;\r\n","import { createContext, useContext } from 'react';\r\nimport { CreatedHabitsStore } from './createdHabitsStore';\r\nimport DayStore from './dayStore';\r\nimport ModalStore from './modalStore';\r\nimport { MonthStore } from './monthStore';\r\nimport StatisticsStore from './statisticsStore';\r\nimport { TutorialStore } from './tutorialStore';\r\n\r\nexport interface Store {\r\n  dayStore: DayStore;\r\n  monthStore: MonthStore;\r\n  statisticsStore: StatisticsStore;\r\n  createdHabitsStore: CreatedHabitsStore;\r\n  modalStore: ModalStore;\r\n  tutorialStore: TutorialStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  dayStore: new DayStore(),\r\n  monthStore: new MonthStore(),\r\n  statisticsStore: new StatisticsStore(),\r\n  createdHabitsStore: new CreatedHabitsStore(),\r\n  modalStore: new ModalStore(),\r\n  tutorialStore: new TutorialStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n  return useContext(StoreContext);\r\n};\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Habit } from '../models/habit';\r\nimport { HabitStats } from '../models/habitStats';\r\nimport { Statistics } from '../models/statistics';\r\nimport { getFromStorage, saveToStorage, STATISTICS } from '../utils/utils';\r\nimport { store } from './store';\r\n\r\nexport default class StatisticsStore {\r\n  habits: HabitStats[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  loadStatistics = () => {\r\n    const data = getFromStorage<Statistics>(STATISTICS);\r\n    if (!data) {\r\n      const statistics: Statistics = {\r\n        habits: this.habits,\r\n      };\r\n      saveToStorage<Statistics>(STATISTICS, statistics);\r\n      return;\r\n    } else if (store.monthStore.checkNewMonth) {\r\n      this.habits = [];\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n      return;\r\n    }\r\n    this.habits = data.habits;\r\n  };\r\n\r\n  addToStats = (habit: Habit) => {\r\n    const h = this.findHabit(habit);\r\n    if (!h) {\r\n      this.habits.push({\r\n        habit,\r\n        toDo: 1,\r\n        completed: 0,\r\n        missed: 0,\r\n      });\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    } else {\r\n      h.toDo++;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  findHabit = (habit: Habit) => {\r\n    return this.habits.find((el) => el.habit.habitName === habit.habitName);\r\n  };\r\n\r\n  reduceHabitCount = (habit: Habit) => {\r\n    const h = this.findHabit(habit);\r\n    if (h) {\r\n      h.toDo--;\r\n      if (h.toDo === 0) {\r\n        this.habits = this.habits.filter(\r\n          (el) => el.habit.habitName !== h.habit.habitName\r\n        );\r\n        saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n      } else {\r\n        saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n      }\r\n    }\r\n  };\r\n\r\n  increaseCompletedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    if (index === 0 || index) {\r\n      this.habits[index].completed++;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  reduceCompletedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    if (this.habits[index].habit && habit.completed) {\r\n      this.habits[index].completed--;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  increaseMissedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    const foundHabit = this.habits[index].habit;\r\n    if (foundHabit && !foundHabit.completed && !foundHabit.missed) {\r\n      this.habits[index].missed++;\r\n      foundHabit.missed = true;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  reduceMissedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    if (this.habits[index].habit) {\r\n      this.habits[index].missed--;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  removeHabit = (habit: string) => {\r\n    this.habits = this.habits.filter((el) => el.habit.habitName !== habit);\r\n    saveToStorage(STATISTICS, { habits: this.habits });\r\n  };\r\n\r\n  clearStatistics = () => {\r\n    this.habits = [];\r\n    saveToStorage(STATISTICS, { habits: this.habits });\r\n  };\r\n\r\n  renameHabit = (habit: string, newName: string) => {\r\n    if (!this.habits.find((el) => el.habit.habitName === newName)) {\r\n      this.habits = this.habits.map((el) =>\r\n        el.habit.habitName === habit\r\n          ? { ...el, habit: { ...el.habit, habitName: newName } }\r\n          : el\r\n      );\r\n      saveToStorage(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  checkExistance = (newName: string) => {\r\n    return this.habits.find((el) => el.habit.habitName === newName);\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Habits } from '../models/habits';\r\nimport { getFromStorage, HABITS, saveToStorage } from '../utils/utils';\r\n\r\nexport class CreatedHabitsStore {\r\n  habits: string[] = [];\r\n  currentlySelectedHabit = '';\r\n  open = false;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (habit: string) => {\r\n    this.open = true;\r\n    this.currentlySelectedHabit = habit;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.open = false;\r\n    this.currentlySelectedHabit = '';\r\n  };\r\n\r\n  init = () => {\r\n    const data = getFromStorage<Habits>(HABITS);\r\n    if (!data) {\r\n      const habits: Habits = {\r\n        habits: this.habits,\r\n      };\r\n      saveToStorage<Habits>(HABITS, habits);\r\n      return;\r\n    }\r\n    this.habits = data.habits;\r\n  };\r\n\r\n  addHabit = (habit: string) => {\r\n    if (!this.habits.includes(habit)) {\r\n      this.habits.push(habit);\r\n      saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  removeHabit = (habit: string) => {\r\n    this.habits = this.habits.filter((el) => el !== habit);\r\n    saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n  };\r\n\r\n  clearHabits = () => {\r\n    this.habits = [];\r\n    saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n  };\r\n\r\n  renameHabit = (habit: string, newName: string) => {\r\n    if (!this.habits.includes(newName)) {\r\n      this.habits = this.habits.map((el) => (el === habit ? newName : el));\r\n      saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  checkExistance = (newName: string) => {\r\n    return this.habits.includes(newName);\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\nexport default class ModalStore {\r\n  open = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = () => {\r\n    this.open = true;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.open = false;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Tutorial } from '../models/tutorial';\r\nimport { getFromStorage, saveToStorage, TUTORIALS } from '../utils/utils';\r\n\r\nexport class TutorialStore {\r\n  tutorials: Tutorial[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  init = () => {\r\n    const data = getFromStorage<Tutorial[]>(TUTORIALS);\r\n    if (data) {\r\n      this.tutorials = data;\r\n    }\r\n  };\r\n\r\n  addTutorial = (name: string) => {\r\n    if (!this.tutorials.find((el) => el.name === name)) {\r\n      this.tutorials.push({\r\n        name,\r\n        checked: false,\r\n      });\r\n      saveToStorage<Tutorial[]>(TUTORIALS, this.tutorials);\r\n    }\r\n  };\r\n\r\n  markChecked = (name: string) => {\r\n    const item = this.tutorials.find((el) => el.name === name);\r\n\r\n    if (item) {\r\n      console.log('hello');\r\n      item.checked = true;\r\n    }\r\n    saveToStorage<Tutorial[]>(TUTORIALS, this.tutorials);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { buttonStyles } from '../utils/utils';\r\n\r\ninterface Props {\r\n  handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n  styling?: string;\r\n}\r\n\r\nconst AddHabitButton = ({ handleSubmit, styling }: Props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={`rounded-r-md ${buttonStyles('blue')} ${styling}`}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n      onClick={() => handleSubmit()}\r\n      type=\"submit\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AddHabitButton;\r\n","import React from 'react';\r\n\r\nconst BouncyText = () => {\r\n  return (\r\n    <p className=\"absolute top-0 bounce-pos text-blue-900 text-lg animate-bounce\">\r\n      Click me\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default BouncyText;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\nimport BouncyText from './BouncyText';\r\n\r\ninterface Props {\r\n  content: string;\r\n  tutName: string;\r\n  styling?: string;\r\n}\r\n\r\nconst Info = ({ content, styling, tutName }: Props) => {\r\n  const { tutorialStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    tutorialStore.init();\r\n    tutorialStore.addTutorial(tutName);\r\n  }, [tutorialStore, tutName]);\r\n  return (\r\n    <>\r\n      {!tutorialStore.tutorials.find((el) => el.name === tutName)?.checked && (\r\n        <BouncyText />\r\n      )}\r\n      <Popup\r\n        content={content}\r\n        on=\"click\"\r\n        position=\"top right\"\r\n        pinned\r\n        trigger={\r\n          <svg\r\n            onClick={() => tutorialStore.markChecked(tutName)}\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            type=\"button\"\r\n            className={`rounded-full cursor-pointer text-blue-700 hover:bg-blue-600 hover:text-blue-200 text-lg ${styling}`}\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n          </svg>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(Info);\r\n","import { Formik, Form, Field } from 'formik';\r\nimport React from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport AddHabitButton from './AddHabitButton';\r\nimport * as Yup from 'yup';\r\nimport { inputOutline } from '../utils/utils';\r\nimport Info from './Info';\r\n\r\nconst AddHabitForm = () => {\r\n  const { createdHabitsStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize={true}\r\n      initialValues={{ habitName: '', error: '' }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        createdHabitsStore.addHabit(values.habitName);\r\n        resetForm();\r\n      }}\r\n      validationSchema={Yup.object({\r\n        habitName: Yup.string().required('Please enter a Habit/Task'),\r\n      })}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Form className=\"h-14 ml-4 mr-4 text-center flex flex-row mt-4 justify-start items-center relative \">\r\n          <Field\r\n            name=\"habitName\"\r\n            className={`${inputOutline()} w-1/2 z-30 text-center text-l h-10 font-light rounded-md\r\n                `}\r\n            placeholder=\"Enter Habit/Task...\"\r\n          />\r\n          <AddHabitButton\r\n            handleSubmit={handleSubmit}\r\n            styling={`w-10 h-10 ml-2`}\r\n          />\r\n          <div className=\"ml-auto flex flex-col h-20 w-20 items-center justify-center\">\r\n            <Info\r\n              tutName=\"add habit\"\r\n              content=\"Enter habit or Task, then drag and drop it onto a day either below or above.\"\r\n              styling={`w-9 h-9`}\r\n            />\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddHabitForm;\r\n","import React from 'react';\r\n\r\nconst BackToTop = () => {\r\n  return (\r\n    <a\r\n      href=\"#top\"\r\n      className=\"fixed fill-current border-2 border-blue-900 text-blue-900 md:bottom-8 md:right-8 bottom-5 right-5 bg-transparent md:min-w-min md:min-h-min  md:p-4 p-2 rounded-full transform hover:scale-125 duration-75 hover:bg-blue-900 hover:text-blue-200\"\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"md:h-10 md:w-10 w-6 h-6\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default BackToTop;\r\n","import React from 'react';\r\nimport { Habit } from '../models/habit';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props {\r\n  habit: Habit;\r\n  passed: boolean;\r\n}\r\n\r\nconst Checkbox = ({ habit, passed }: Props) => {\r\n  const {\r\n    dayStore: { completeHabit },\r\n    statisticsStore: { reduceCompletedCount, increaseCompletedCount },\r\n  } = useStore();\r\n  return (\r\n    <label className=\"checkbox ml-2\">\r\n      <span className=\"checkbox__input\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          checked={habit.completed}\r\n          disabled={passed}\r\n          onChange={(e) => {\r\n            if (e.target.checked) {\r\n              increaseCompletedCount(habit);\r\n              completeHabit(habit.dayId, habit.id, true);\r\n            } else {\r\n              reduceCompletedCount(habit);\r\n              completeHabit(habit.dayId, habit.id, false);\r\n            }\r\n          }}\r\n        />\r\n        <span className=\"checkbox__control\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            aria-hidden=\"true\"\r\n            focusable=\"false\"\r\n          >\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"1\"\r\n              d=\"M1.73 12.91l6.37 6.37L22.79 4.59\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  styling?: string;\r\n  onClick?: React.MouseEventHandler<SVGSVGElement>;\r\n}\r\n\r\nconst DeleteButton = ({ styling, onClick }: Props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={styling}\r\n      onClick={onClick}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from 'react';\r\nimport { Habit } from '../models/habit';\r\nimport { useStore } from '../stores/store';\r\nimport DeleteButton from './DeleteButton';\r\n\r\ninterface Props {\r\n  completed: boolean | 0;\r\n  dayNumber: number;\r\n  habit: Habit;\r\n}\r\n\r\nconst DeleteHabitButton = ({ completed, dayNumber, habit }: Props) => {\r\n  const {\r\n    dayStore: { removeHabit },\r\n    statisticsStore: { reduceHabitCount, reduceCompletedCount },\r\n    monthStore: { currentDay },\r\n  } = useStore();\r\n\r\n  const deleteButtonStyles = (color: string) => {\r\n    return `fill-current hover:text-${color}-500 cursor-pointer transform hover:scale-125 duration-75`;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    reduceCompletedCount(habit);\r\n    reduceHabitCount(habit);\r\n    removeHabit(habit.dayId, habit.id);\r\n  };\r\n\r\n  return (\r\n    <DeleteButton\r\n      styling={`h-10 w-10 mr-2 ${\r\n        completed\r\n          ? deleteButtonStyles('green')\r\n          : currentDay === dayNumber\r\n          ? deleteButtonStyles('pink')\r\n          : deleteButtonStyles('yellow')\r\n      }`}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteHabitButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Habit } from '../models/habit';\r\nimport { shortenText } from '../utils/utils';\r\nimport Checkbox from './Checkbox';\r\nimport DeleteHabitButton from './DeleteHabitButton';\r\n\r\ninterface Props {\r\n  habit: Habit;\r\n  passed: boolean;\r\n  completed: boolean | 0;\r\n  dayNumber: number;\r\n  weekday: string;\r\n  styling?: string;\r\n}\r\n\r\nconst HabitEntry = ({\r\n  habit,\r\n  passed,\r\n  completed,\r\n  dayNumber,\r\n  styling,\r\n}: Props) => {\r\n  return (\r\n    <div className={styling}>\r\n      <Checkbox passed={passed} habit={habit} />\r\n      <p\r\n        className={`capitalize text-base tracking-wide w-full ${\r\n          habit.completed && 'line-through'\r\n        }`}\r\n      >\r\n        {shortenText(habit.habitName, 15)}\r\n      </p>\r\n      {!passed && (\r\n        <DeleteHabitButton\r\n          completed={completed}\r\n          dayNumber={dayNumber}\r\n          habit={habit}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(HabitEntry);\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { Habit } from '../models/habit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useStore } from '../stores/store';\r\nimport { Day } from '../models/day';\r\nimport { checkCompletion, checkAllCompletedHabits } from '../utils/utils';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport HabitEntry from './HabitEntry';\r\n\r\ninterface Props {\r\n  day: Day;\r\n}\r\n\r\nconst CalendarHeaderDayCard = ({ day }: Props) => {\r\n  const {\r\n    createdHabitsStore,\r\n    monthStore,\r\n    dayStore: { addHabit },\r\n    statisticsStore: { addToStats },\r\n  } = useStore();\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: 'habit',\r\n    drop: (item: { name: string }) => {\r\n      const habit: Habit = {\r\n        completed: false,\r\n        dayId: day.id,\r\n        habitName: item.name,\r\n        id: uuidv4(),\r\n        missed: false,\r\n      };\r\n      createdHabitsStore.addHabit(habit.habitName);\r\n      addHabit(day.id, habit);\r\n      addToStats(habit);\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const borderAroundCurrentDay = (day: Day) => {\r\n    if (\r\n      day.dayNumber === monthStore.currentDay &&\r\n      day.habits.length &&\r\n      day.habits.every((el) => el.completed)\r\n    ) {\r\n      return 'border-green-500 border-2 font-normal';\r\n    } else if (day.dayNumber === monthStore.currentDay) {\r\n      return 'border-pink-500 border-2 font-normal';\r\n    }\r\n  };\r\n\r\n  const trigger = () => {\r\n    return (\r\n      <div\r\n        key={day.id}\r\n        ref={!day.passed ? drop : undefined}\r\n        className={`${\r\n          isOver && 'filter brightness-110 transform scale-150'\r\n        } w-min-min w-14 p-2 m-2 text-xl flex flex-col items-center justify-center transform duration-100 hover:scale-110 hover:-translate-y-0.5 rounded-md shadow-md ${checkCompletion(\r\n          day,\r\n          monthStore.currentDay,\r\n          true,\r\n          false\r\n        )} ${borderAroundCurrentDay(day)}`}\r\n        onDoubleClick={() => (window.location.href = `#${day.dayNumber}`)}\r\n      >\r\n        <div\r\n          className={`${\r\n            day.habits.length &&\r\n            `w-4 h-4 ${\r\n              checkAllCompletedHabits(day)\r\n                ? 'bg-green-500'\r\n                : day.passed && checkAllCompletedHabits(day)\r\n                ? 'bg-green-500'\r\n                : day.passed\r\n                ? 'bg-blue-500'\r\n                : 'bg-red-500'\r\n            } absolute indicator rounded-full`\r\n          }`}\r\n        ></div>\r\n        <p className=\"text-sm\">{day.weekDay}</p>\r\n        {day.dayNumber}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {day.habits.length > 0 ? (\r\n        <Popup\r\n          hoverable\r\n          on=\"click\"\r\n          basic\r\n          style={{\r\n            backgroundColor: `${\r\n              checkAllCompletedHabits(day)\r\n                ? 'rgba(110, 231, 183,1)'\r\n                : monthStore.currentDay === day.dayNumber\r\n                ? 'rgba(249, 168, 212,1)'\r\n                : day.passed\r\n                ? 'rgba(147, 197, 253,1)'\r\n                : day.weekDay === 'Sat' || day.weekDay === 'Sun'\r\n                ? 'rgba(252, 165, 165,1)'\r\n                : 'rgba(252, 211, 77,1)'\r\n            }`,\r\n            paddingRight: '1.5rem',\r\n          }}\r\n          content={day.habits.map((habit) => (\r\n            <ul\r\n              key={habit.id}\r\n              className={`${\r\n                day.habits.length &&\r\n                `${\r\n                  checkAllCompletedHabits(day)\r\n                    ? 'text-green-800'\r\n                    : day.passed && checkAllCompletedHabits(day)\r\n                    ? 'text-green-800'\r\n                    : monthStore.currentDay === day.dayNumber\r\n                    ? 'text-pink-800'\r\n                    : day.passed\r\n                    ? 'text-blue-800'\r\n                    : 'text-yellow-800'\r\n                }`\r\n              }`}\r\n            >\r\n              <HabitEntry\r\n                styling={`w-full flex items-center shadow-inner rounded-r-md rounded-l-md habit h-10 m-1 ${\r\n                  checkAllCompletedHabits(day)\r\n                    ? 'bg-green-200'\r\n                    : monthStore.currentDay === day.dayNumber\r\n                    ? 'bg-pink-200'\r\n                    : day.passed\r\n                    ? 'bg-blue-200'\r\n                    : day.weekDay === 'Sat' || day.weekDay === 'Sun'\r\n                    ? 'bg-red-200'\r\n                    : 'bg-yellow-200'\r\n                }`}\r\n                completed={checkAllCompletedHabits(day)}\r\n                dayNumber={day.dayNumber}\r\n                habit={habit}\r\n                passed={day.passed}\r\n                weekday={day.weekDay}\r\n              />\r\n            </ul>\r\n          ))}\r\n          trigger={trigger()}\r\n        />\r\n      ) : (\r\n        trigger()\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(CalendarHeaderDayCard);\r\n","import React from 'react';\r\nimport { Day } from '../models/day';\r\nimport CalendarHeaderDayCard from './CalendarHeaderDayCard';\r\nimport Info from './Info';\r\n\r\ninterface Props {\r\n  days: Day[];\r\n}\r\n\r\nconst CalendarHeader = ({ days }: Props) => {\r\n  return (\r\n    <div\r\n      className={\r\n        'text-center my-20 flex flex-wrap justify-center items-center w-10/12 m-auto relative'\r\n      }\r\n    >\r\n      <div className=\"order-last relative flex flex-col items-center w-20\">\r\n        <Info\r\n          content=\"Double click on a day to jump to it\"\r\n          tutName=\"calendar header\"\r\n          styling={`w-8 h-8`}\r\n        />\r\n      </div>\r\n      {days.map((day) => (\r\n        <CalendarHeaderDayCard key={day.id} day={day} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarHeader;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  styling?: string;\r\n  onClick?: React.MouseEventHandler<SVGSVGElement>;\r\n}\r\n\r\nconst Checkmark = ({ styling, onClick }: Props) => {\r\n  return (\r\n    <svg\r\n      type=\"submit\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      onClick={onClick}\r\n      className={styling}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Checkmark;\r\n","import { Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport { buttonStyles, inputOutline } from '../utils/utils';\r\nimport Checkmark from './Checkmark';\r\nimport DeleteButton from './DeleteButton';\r\n\r\ninterface Props {\r\n  habit: string;\r\n  changeEditMode: () => void;\r\n}\r\n\r\nconst EditCreatedHabitForm = ({ habit, changeEditMode }: Props) => {\r\n  const { createdHabitsStore, dayStore, statisticsStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ newName: habit, error: '' }}\r\n      onSubmit={(values, { setErrors }) => {\r\n        const { newName } = values;\r\n        if (habit === newName) {\r\n          changeEditMode();\r\n          return;\r\n        }\r\n        if (\r\n          dayStore.checkExistance(newName) ||\r\n          createdHabitsStore.checkExistance(newName) ||\r\n          statisticsStore.checkExistance(newName)\r\n        ) {\r\n          setErrors({ error: 'Name already exists' });\r\n          return;\r\n        }\r\n        dayStore.renameHabit(habit, newName);\r\n        createdHabitsStore.renameHabit(habit, newName);\r\n        statisticsStore.renameHabit(habit, newName);\r\n      }}\r\n    >\r\n      {({ handleSubmit, errors }) => (\r\n        <Form className=\"relative flex flex-col p-2 z-50\">\r\n          <Field\r\n            autoFocus={true}\r\n            name=\"newName\"\r\n            className={`${inputOutline()} w-36 rounded-md text-center text-lg capitalize`}\r\n          />\r\n          <p className=\"absolute error-msg text-red-700\">{errors.error}</p>\r\n          <div className=\"absolute edit-mode flex flex-row\">\r\n            <div className=\"flex flex-row justify-center items-center \">\r\n              <Checkmark\r\n                styling={`h-6 w-6 mr-2 cursor-pointer  bg-green-300 hover:bg-green-600 transform duration-75 hover:scale-105 rounded-md ${buttonStyles(\r\n                  'green'\r\n                )}`}\r\n                onClick={() => handleSubmit()}\r\n              />\r\n              <DeleteButton\r\n                styling={`w-6 h-6 cursor-pointer bg-red-300 hover:bg-red-600 transform duration-75 hover:scale-105 rounded-md ${buttonStyles(\r\n                  'red'\r\n                )} `}\r\n                onClick={changeEditMode}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default EditCreatedHabitForm;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useState } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { useStore } from '../stores/store';\r\nimport { buttonStyles, shortenText } from '../utils/utils';\r\nimport DeleteButton from './DeleteButton';\r\nimport EditCreatedHabitForm from './EditCreatedHabitForm';\r\n\r\ninterface Props {\r\n  habit: string;\r\n}\r\n\r\nconst CreatedHabitContainerElement = ({ habit }: Props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const { createdHabitsStore } = useStore();\r\n\r\n  const [, drag] = useDrag(() => ({\r\n    type: 'habit',\r\n    item: { name: habit },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const changeEditMode = () => {\r\n    setEditMode((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={!editMode ? drag : undefined}\r\n      className={`\r\n       pl-8 pr-8 bg-blue-400 relative text-blue-900 bg-opacity-50 rounded-full shadow text-center m-4  ${\r\n         !editMode && 'cursor-hand'\r\n       }  hover:bg-blue-300 transform hover:scale-110 duration-100 chdb-hover`}\r\n    >\r\n      {editMode ? (\r\n        <EditCreatedHabitForm changeEditMode={changeEditMode} habit={habit} />\r\n      ) : (\r\n        <p\r\n          onDoubleClick={changeEditMode}\r\n          className={`capitalize text-lg p-2 text-blue-800`}\r\n        >\r\n          {shortenText(habit, 10)}\r\n        </p>\r\n      )}\r\n      <DeleteButton\r\n        styling={`h-7 w-7 absolute chdb hover:text-blue-500 cursor-pointer transform hover:scale-125 duration-75 ${buttonStyles(\r\n          'blue'\r\n        )}`}\r\n        onClick={() => createdHabitsStore.openModal(habit)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreatedHabitContainerElement);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport CreatedHabitContainerElement from './CreatedHabitContainerElement';\r\nimport Info from './Info';\r\n\r\nconst CreatedHabitsContainer = () => {\r\n  const { createdHabitsStore } = useStore();\r\n  const [sticky, setSticky] = useState('');\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.pageYOffset > 400 && createdHabitsStore.habits.length) {\r\n        setSticky('sticky');\r\n      } else {\r\n        setSticky('');\r\n      }\r\n    });\r\n  }, [createdHabitsStore.habits.length, createdHabitsStore.habits]);\r\n\r\n  return (\r\n    <div\r\n      className={`${sticky} rounded-md bg-blue-300 p-3 m-4 min-h-min min-h shadow-inner flex flex-row relative flex-wrap justify-center items-center`}\r\n    >\r\n      {createdHabitsStore.habits.map((el) => (\r\n        <CreatedHabitContainerElement key={el} habit={el} />\r\n      ))}\r\n      {createdHabitsStore.habits.length > 0 && (\r\n        <div className=\"absolute bottom-2 right-0 w-20 h-12 flex flex-col items-center justify-center\">\r\n          <Info\r\n            tutName=\"edit habit\"\r\n            content=\"Double click on title to edit.\"\r\n            styling={` w-9 h-9`}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreatedHabitsContainer);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Day } from '../models/day';\r\nimport { Habit } from '../models/habit';\r\nimport { useStore } from '../stores/store';\r\nimport { checkAllCompletedHabits, checkCompletion } from '../utils/utils';\r\nimport HabitEntry from './HabitEntry';\r\n\r\ninterface Props {\r\n  day: Day;\r\n  habits: Habit[];\r\n}\r\n\r\nconst DayCard = ({ day, habits }: Props) => {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: 'habit',\r\n    drop: (item: { name: string }) => {\r\n      const habit: Habit = {\r\n        completed: false,\r\n        dayId: day.id,\r\n        habitName: item.name,\r\n        id: uuidv4(),\r\n        missed: false,\r\n      };\r\n      createdHabitsStore.addHabit(habit.habitName);\r\n      addHabit(day.id, habit);\r\n      addToStats(habit);\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const { dayStore, statisticsStore, monthStore, createdHabitsStore } =\r\n    useStore();\r\n  const { addHabit } = dayStore;\r\n  const { addToStats } = statisticsStore;\r\n  const { currentDay } = monthStore;\r\n  const dayCardMonthStyle = (color: string) => {\r\n    return `border-r-2 border-${color}-400`;\r\n  };\r\n\r\n  const backgroundStyles = () => {\r\n    if (checkAllCompletedHabits(day)) {\r\n      return dayCardMonthStyle('green');\r\n    } else if (day.dayNumber === currentDay) {\r\n      return dayCardMonthStyle('pink');\r\n    } else if (day.passed && checkAllCompletedHabits(day)) {\r\n      return dayCardMonthStyle('green');\r\n    } else if (day.passed) {\r\n      return dayCardMonthStyle('blue');\r\n    } else if (day.weekDay === 'Sun' || day.weekDay === 'Sat') {\r\n      return dayCardMonthStyle('red');\r\n    }\r\n    return dayCardMonthStyle('yellow');\r\n  };\r\n\r\n  const cardNumberStyles =\r\n    'p-2  md:text-4xl text-3xl filter drop-shadow font-sans';\r\n\r\n  return (\r\n    <div\r\n      ref={!day.passed ? drop : undefined}\r\n      className={`${\r\n        isOver && 'filter brightness-110'\r\n      } md:m-4 md:p-4 p-4 m-2  min-height card-container justify-between rounded-md shadow-lg ${checkCompletion(\r\n        day,\r\n        monthStore.currentDay,\r\n        false\r\n      )}`}\r\n      id={`${day.dayNumber}`}\r\n    >\r\n      <div\r\n        className={`${backgroundStyles()} flex w-full day-card-header flex-col items-center justify-center h-full pr-4 `}\r\n      >\r\n        <h1 className={cardNumberStyles}>{day.weekDay}</h1>\r\n        <h1 className={cardNumberStyles}>{day.dayNumber}</h1>\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"flex flex-row flex-wrap mb-auto\">\r\n          {habits.map((el) => (\r\n            <HabitEntry\r\n              styling={`w-full flex items-center shadow-inner rounded-r-md rounded-l-md habit h-10 ml-2 ${\r\n                checkAllCompletedHabits(day)\r\n                  ? 'bg-green-200'\r\n                  : currentDay === day.dayNumber\r\n                  ? 'bg-pink-200'\r\n                  : day.passed\r\n                  ? 'bg-blue-200'\r\n                  : day.weekDay === 'Sat' || day.weekDay === 'Sun'\r\n                  ? 'bg-red-200'\r\n                  : 'bg-yellow-200'\r\n              }`}\r\n              completed={checkAllCompletedHabits(day)}\r\n              key={el.id}\r\n              habit={el}\r\n              passed={day.passed}\r\n              dayNumber={day.dayNumber}\r\n              weekday={day.weekDay}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(DayCard);\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  hidden: boolean;\r\n  setHidden: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst HideDaysButton = ({ hidden, setHidden }: Props) => {\r\n  return (\r\n    <div className=\"hideButton absolute left-0\">\r\n      <button\r\n        onClick={() => setHidden(!hidden)}\r\n        className=\"bg-red-300 text-red-800 hover:bg-red-600 hover:text-red-200 p-3 rounded-md text-lg transform duration-75 hover:scale-105\"\r\n      >\r\n        {hidden ? (\r\n          <p className=\"flex flex-row justify-items-center items-center\">\r\n            Show hidden days\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 ml-2\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </p>\r\n        ) : (\r\n          <p className=\"flex flex-row justify-center items-center\">\r\n            Hide passed days\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 ml-2\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideDaysButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { MouseEventHandler } from 'react';\r\nimport { Modal, ModalProps } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  text: string;\r\n  open: boolean;\r\n  onYes: MouseEventHandler<HTMLButtonElement> | undefined;\r\n  onNo: MouseEventHandler<HTMLButtonElement> | undefined;\r\n  onClose:\r\n    | ((\r\n        event: React.MouseEvent<HTMLElement, MouseEvent>,\r\n        data: ModalProps\r\n      ) => void)\r\n    | undefined;\r\n}\r\n\r\nconst buttonStyles = (color: string) => {\r\n  return `bg-${color}-300 mr-4 text-${color}-800 hover:bg-${color}-600 hover:text-${color}-200 p-2 pl-6 pr-6 rounded-md text-lg transform duration-75 hover:scale-105`;\r\n};\r\n\r\nconst ClearDataMotal = ({ text, onYes, onClose, onNo, open }: Props) => {\r\n  return (\r\n    <Modal size=\"mini\" open={open} onClose={onClose} className=\"font-sans\">\r\n      <Modal.Header>\r\n        <p>{text}</p>\r\n      </Modal.Header>\r\n      <Modal.Actions>\r\n        <button onClick={onYes} className={buttonStyles('green')}>\r\n          Yes\r\n        </button>\r\n        <button className={buttonStyles('red')} onClick={onNo}>\r\n          No\r\n        </button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ClearDataMotal);\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  content: any;\r\n  color: string;\r\n  additionalStyle?: string;\r\n}\r\n\r\nconst StatisticsContent = ({ content, color, additionalStyle }: Props) => {\r\n  return (\r\n    <div\r\n      className={`bg-${color}-300 h-full p-3 text-${color}-800 flex-grow text-xl ${additionalStyle}`}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsContent;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  color: string;\r\n  text: string;\r\n}\r\n\r\nconst StatisticsLegend = ({ color, text }: Props) => {\r\n  return (\r\n    <div className=\"flex flex-row items-center m-2 \">\r\n      <div className={`w-6 h-6 bg-${color}-300 mr-1`}></div>\r\n      <p className=\"text-lg font-light\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsLegend;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport { shortenText } from '../utils/utils';\r\nimport StatisticsContent from './StatisticsContent';\r\nimport StatisticsLegend from './StatisticsLegend';\r\n\r\nconst Statistics = () => {\r\n  const { statisticsStore, modalStore } = useStore();\r\n  const { openModal } = modalStore;\r\n\r\n  return (\r\n    <div className=\"relative bg-blue-300 bg-opacity-50 shadow-inner w-full rounded-md mt-4 ms:mt-0 md:mt-0\">\r\n      <button\r\n        onClick={openModal}\r\n        className=\"w-full font-light py-4 rounded-t-md text-xl tracking-widest bg-red-300 text-red-800 hover:bg-red-600 hover:text-red-200 text-lg\"\r\n      >\r\n        Clear\r\n      </button>\r\n      <div className=\"flex 2xl:flex-row flex-col  justify-evenly items-start mt-3 m-4 text-center\">\r\n        <StatisticsLegend text=\"Completed\" color=\"green\" />\r\n        <StatisticsLegend text=\"Missed\" color=\"red\" />\r\n        <StatisticsLegend text=\"Completion Rate\" color=\"blue\" />\r\n      </div>\r\n      {statisticsStore.habits.map(\r\n        ({ habit: { habitName, id }, toDo, completed, missed }) => (\r\n          <div\r\n            key={id}\r\n            className={`bg-indigo-300 text-indigo-800 m-6 mt-4 text-center rounded-md flex flex-col shadow-lg h-28`}\r\n          >\r\n            <div className=\"flex items-center justify-center flex-grow\">\r\n              <p className=\"text-xl font-light tracking-widest capitalize\">\r\n                {shortenText(habitName, 15)}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex bg-purple-600 mt-auto justify-around items-center rounded-b-md\">\r\n              <StatisticsContent\r\n                content={`${completed}/${toDo}`}\r\n                color=\"green\"\r\n                additionalStyle=\"rounded-bl-md\"\r\n              />\r\n              <StatisticsContent content={`${missed}/${toDo}`} color=\"red\" />\r\n              <StatisticsContent\r\n                content={`${Math.round((completed / toDo) * 100)} %`}\r\n                color=\"blue\"\r\n                additionalStyle=\"rounded-br-md\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Statistics);\r\n","import React from 'react';\r\n\r\nconst GitHubIcon = () => {\r\n  return (\r\n    <button\r\n      className=\"w-10 h-10 absolute top-5 right-5 fill-current text-blue-600 hover:text-blue-900 cursor-pointer\"\r\n      onClick={() => window.open('https://github.com/ArtisGulbis/MonthPlanner')}\r\n    >\r\n      <svg\r\n        viewBox=\"0 0 256 250\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        preserveAspectRatio=\"xMidYMid\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <g>\r\n          <path d=\"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\"></path>\r\n        </g>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GitHubIcon;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { TouchBackend } from 'react-dnd-touch-backend';\r\nimport './App.css';\r\nimport AddHabitForm from './components/AddHabitForm';\r\nimport BackToTop from './components/BackToTop';\r\nimport CalendarHeader from './components/CalendarHeader';\r\nimport CreatedHabitsContainer from './components/CreatedHabitsContainer';\r\nimport DayCard from './components/DayCard';\r\nimport HideDaysButton from './components/HideDaysButton';\r\nimport Modal from './components/Modal';\r\nimport Statistics from './components/Statistics';\r\nimport { Day } from './models/day';\r\nimport { useStore } from './stores/store';\r\nimport { clearLocalStorage } from './utils/utils';\r\nimport { isMobile } from 'react-device-detect';\r\nimport GitHubIcon from './components/GitHubIcon';\r\n\r\nfunction App() {\r\n  const [days, setDays] = useState<Day[]>([]);\r\n  const [hidden, setHidden] = useState(true);\r\n  const {\r\n    dayStore,\r\n    modalStore,\r\n    monthStore,\r\n    statisticsStore,\r\n    createdHabitsStore,\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    monthStore.init();\r\n    createdHabitsStore.init();\r\n    statisticsStore.loadStatistics();\r\n    dayStore.generateDays();\r\n    dayStore.checkPassedDays();\r\n    setDays(dayStore.days);\r\n  }, [dayStore, monthStore, statisticsStore, createdHabitsStore]);\r\n\r\n  const onYesClearData = () => {\r\n    modalStore.closeModal();\r\n    clearLocalStorage();\r\n  };\r\n\r\n  const handleClick = (habit: string) => {\r\n    dayStore.clearDaysOfHabit(habit);\r\n    statisticsStore.removeHabit(habit);\r\n    createdHabitsStore.removeHabit(habit);\r\n    createdHabitsStore.closeModal();\r\n  };\r\n\r\n  return (\r\n    <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n      <div className=\"bg-gradient-to-b from-blue-100 to-blue-200 pb-8\">\r\n        <GitHubIcon />\r\n        <Modal\r\n          onYes={onYesClearData}\r\n          text=\"Do you want to clear all data?\"\r\n          onNo={() => modalStore.closeModal()}\r\n          onClose={() => modalStore.closeModal()}\r\n          open={modalStore.open}\r\n        />\r\n        <Modal\r\n          open={createdHabitsStore.open}\r\n          text={`Clear all instances of ${createdHabitsStore.currentlySelectedHabit}`}\r\n          onYes={() => handleClick(createdHabitsStore.currentlySelectedHabit)}\r\n          onClose={() => createdHabitsStore.closeModal()}\r\n          onNo={() => createdHabitsStore.closeModal()}\r\n        />\r\n        <h1\r\n          id=\"top\"\r\n          className=\"font-sans italic tracking-widest text-indigo-700 font-normal underline text-7xl pt-10 text-center md:mb-10 md:pt-10 md:text-9xl\"\r\n        >\r\n          {monthStore.currentMonth}\r\n        </h1>\r\n        {/* <div className=\"flex flex-col relative justify-center item-center w-11/12 m-auto\"> */}\r\n        <CalendarHeader days={days} />\r\n        <div className=\"container w-full\">\r\n          <div className=\"flex relative flex-col bg-blue-300 w-full ms:w-auto shadow-inner bg-opacity-50 rounded-md p-1 md:p-8 small-screens\">\r\n            <HideDaysButton hidden={hidden} setHidden={setHidden} />\r\n            <AddHabitForm />\r\n            <CreatedHabitsContainer />\r\n            {days.map((day) =>\r\n              hidden && day.passed ? null : (\r\n                <DayCard key={day.id} day={day} habits={day.habits} />\r\n              )\r\n            )}\r\n          </div>\r\n          <Statistics />\r\n          {/* </div> */}\r\n        </div>\r\n        <BackToTop />\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, StoreContext } from './stores/store';\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <App />\r\n  </StoreContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}