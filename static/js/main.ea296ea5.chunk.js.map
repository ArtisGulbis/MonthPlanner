{"version":3,"sources":["utils/utils.ts","stores/dayStore.ts","stores/monthStore.ts","stores/store.ts","stores/statisticsStore.ts","stores/createdHabitsStore.ts","stores/modalStore.ts","components/AddHabitButton.tsx","components/Info.tsx","components/AddHabitForm.tsx","components/BackToTop.tsx","components/CalendarHeaderDayCard.tsx","components/CalendarHeader.tsx","components/DeleteButton.tsx","components/Checkmark.tsx","components/EditCreatedHabitForm.tsx","components/CreatedHabitContainerElement.tsx","components/CreatedHabitsContainer.tsx","components/Checkbox.tsx","components/DeleteHabitButton.tsx","components/HabitEntry.tsx","components/DayCard.tsx","components/HideDaysButton.tsx","components/Modal.tsx","components/StatisticsContent.tsx","components/StatisticsLegend.tsx","components/Statistics.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["saveToStorage","key","data","window","localStorage","setItem","JSON","stringify","getFromStorage","parse","getItem","shortenText","text","length","b","split","splice","push","checkAllCompletedHabits","day","habits","every","el","completed","completionStyles","color","refStyles","completionStylesHighlited","buttonStyles","checkCompletion","currentDay","highlight","ref","passedDay","completedDay","todoDay","currentD","passed","dayNumber","DAYS","MONTH","STATISTICS","HABITS","now","DateTime","MonthStore","currentMonth","reset","init","checkNewMonth","monthLong","setNewMonth","clearCurrentMonth","makeAutoObservable","this","store","dayStore","days","generateDays","monthStore","removeItem","createData","daysInMonth","startOfMonth","startOf","i","id","uuidv4","weekDay","plus","weekdayShort","addHabit","habit","find","completeHabit","dayId","habitId","state","dayIndex","findIndex","habitIndex","removeHabit","clearHabits","forEach","clearDaysOfHabit","habitName","filter","checkPassedDays","missed","statisticsStore","increaseMissedCount","renameHabit","newName","map","checkExistance","loadStatistics","statistics","addToStats","h","findHabit","toDo","reduceHabitCount","increaseCompletedCount","index","reduceCompletedCount","reduceMissedCount","clearStatistics","createdHabitsStore","currentlySelectedHabit","open","openModal","closeModal","includes","modalStore","StoreContext","createContext","useStore","useContext","AddHabitButton","handleSubmit","styling","xmlns","className","viewBox","fill","onClick","type","fillRule","d","clipRule","Info","content","Popup","on","position","pinned","trigger","stroke","strokeLinecap","strokeLinejoin","strokeWidth","AddHabitForm","enableReinitialize","initialValues","error","onSubmit","values","resetForm","validationSchema","Yup","required","name","placeholder","BackToTop","href","observer","useDrop","accept","drop","item","collect","monitor","isOver","undefined","borderAroundCurrentDay","CalendarHeader","DeleteButton","Checkmark","EditCreatedHabitForm","changeEditMode","setErrors","errors","autoFocus","useState","editMode","setEditMode","useDrag","isDragging","drag","prev","onDoubleClick","sticky","setSticky","useEffect","addEventListener","pageYOffset","Checkbox","checked","disabled","onChange","e","target","aria-hidden","focusable","DeleteHabitButton","deleteButtonStyles","dayCardMonthStyle","cardNumberStyles","HideDaysButton","hidden","setHidden","onYes","onClose","onNo","Modal","size","Header","Actions","Button","inverted","StatisticsContent","additionalStyle","StatisticsLegend","Math","round","setDays","DndProvider","backend","isMobile","TouchBackend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.ea296ea5.chunk.js","sourcesContent":["import { Day } from '../models/day';\r\nimport { store } from '../stores/store';\r\n\r\nexport const saveToStorage = <T>(key: string, data: T) => {\r\n  window.localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\nexport const getFromStorage = <T>(key: string): T => {\r\n  return JSON.parse(window.localStorage.getItem(key)!);\r\n};\r\n\r\nexport const removeFromStorage = (key: string) => {\r\n  window.localStorage.removeItem(key);\r\n};\r\n\r\nexport const clearLocalStorage = () => {\r\n  store.dayStore.clearHabits();\r\n  store.statisticsStore.clearStatistics();\r\n  store.monthStore.clearCurrentMonth();\r\n  store.createdHabitsStore.clearHabits();\r\n};\r\n\r\nexport const shortenText = (text: string, length: number) => {\r\n  if (text.length > length) {\r\n    const a = text.split('');\r\n    const b = a.splice(0, length);\r\n    b.push('.');\r\n    b.push('.');\r\n    b.push('.');\r\n    return b;\r\n  }\r\n  return text;\r\n};\r\n\r\nexport const checkAllCompletedHabits = (day: Day) => {\r\n  return day.habits.length && day.habits.every((el) => el.completed);\r\n};\r\n\r\nconst completionStyles = (color: string) => {\r\n  return `bg-${color}-300 text-${color}-700`;\r\n};\r\n\r\nconst refStyles = (color: string) => {\r\n  return `bg-${color}-200`;\r\n};\r\n\r\nconst completionStylesHighlited = (color: string) => {\r\n  return `hover:bg-${color}-500 hover:text-${color}-200`;\r\n};\r\n\r\nexport const buttonStyles = (color: string) => {\r\n  return `fill-current text-${color}-700 hover:text-${color}-400 cursor-pointer transform hover:scale-125 duration-75`;\r\n};\r\nexport const inputOutline = () => {\r\n  return `text-blue-600 placeholder-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent`;\r\n};\r\n\r\nexport const checkCompletion = (\r\n  day: Day,\r\n  currentDay: number,\r\n  highlight: boolean,\r\n  ref?: boolean\r\n) => {\r\n  const passedDay = `${completionStyles('blue')} ${\r\n    highlight && completionStylesHighlited('blue')\r\n  } ${ref && refStyles('blue')}`;\r\n  const completedDay = `${completionStyles('green')} ${\r\n    highlight && completionStylesHighlited('green')\r\n  } ${ref && refStyles('green')}`;\r\n  const todoDay = `${completionStyles('yellow')} ${\r\n    highlight && completionStylesHighlited('yellow')\r\n  } ${ref && refStyles('yellow')}`;\r\n  const currentD = `${completionStyles('pink')} ${\r\n    highlight && completionStylesHighlited('pink')\r\n  } ${ref && refStyles('pink')}`;\r\n\r\n  if (day.passed && checkAllCompletedHabits(day)) {\r\n    return completedDay;\r\n  } else if (day.passed) {\r\n    return passedDay;\r\n  }\r\n  if (currentDay === day.dayNumber) {\r\n    if (checkAllCompletedHabits(day)) {\r\n      return completedDay;\r\n    }\r\n    return currentD;\r\n  } else if (checkAllCompletedHabits(day)) {\r\n    return completedDay;\r\n  }\r\n  return todoDay;\r\n};\r\n\r\n//keys for localstorage\r\nexport const DAYS = 'days';\r\nexport const MONTH = 'month';\r\nexport const STATISTICS = 'statistics';\r\nexport const HABITS = 'habits';\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Day } from '../models/day';\r\nimport { DateTime } from 'luxon';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  DAYS,\r\n  getFromStorage,\r\n  removeFromStorage,\r\n  saveToStorage,\r\n} from '../utils/utils';\r\nimport { Habit } from '../models/habit';\r\nimport { store } from './store';\r\nconst now = DateTime.now();\r\n\r\nexport default class DayStore {\r\n  days: Day[] = [];\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  generateDays = () => {\r\n    let data = getFromStorage<Day[]>(DAYS);\r\n    if (!data) {\r\n      this.createData();\r\n    } else if (store.monthStore.checkNewMonth) {\r\n      //new month started\r\n      this.days = [];\r\n      removeFromStorage(DAYS);\r\n      this.createData();\r\n      return;\r\n    }\r\n    //still in current month => load data\r\n    this.days = getFromStorage<Day[]>(DAYS);\r\n  };\r\n\r\n  createData = () => {\r\n    const daysInMonth = now.daysInMonth;\r\n    const startOfMonth = DateTime.now().startOf('month');\r\n    for (let i = 1; i < daysInMonth + 1; i++) {\r\n      this.days.push({\r\n        id: uuidv4(),\r\n        dayNumber: i,\r\n        habits: [],\r\n        weekDay: startOfMonth.plus({ days: i - 1 }).weekdayShort,\r\n        passed: false,\r\n      });\r\n    }\r\n    saveToStorage(DAYS, this.days);\r\n  };\r\n\r\n  addHabit = (id: string, habit: Habit) => {\r\n    let day = this.days.find((el) => el.id === id);\r\n    if (day) {\r\n      day.habits.push(habit);\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  completeHabit = (dayId: string, habitId: string, state: boolean) => {\r\n    let dayIndex = this.days.findIndex((el) => el.id === dayId);\r\n    if (dayIndex === 0 || dayIndex) {\r\n      const habitIndex = this.days[dayIndex].habits.findIndex(\r\n        (el) => el.id === habitId\r\n      );\r\n      this.days[dayIndex].habits[habitIndex].completed = state;\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  removeHabit = (dayId: string, habitId: string) => {\r\n    const dayIndex = this.days.findIndex((el) => el.id === dayId);\r\n    if (dayIndex === 0 || dayIndex) {\r\n      const habitIndex = this.days[dayIndex].habits.findIndex(\r\n        (el) => el.id === habitId\r\n      );\r\n      this.days[dayIndex].habits.splice(habitIndex, 1);\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  clearHabits = () => {\r\n    this.days.forEach((day) => (day.habits = []));\r\n    saveToStorage<Day[]>(DAYS, this.days);\r\n  };\r\n\r\n  clearDaysOfHabit = (habitName: string) => {\r\n    for (let i = 0; i < this.days.length; i++) {\r\n      const day = this.days[i];\r\n      day.habits = day.habits.filter((habit) => habit.habitName !== habitName);\r\n    }\r\n    saveToStorage<Day[]>(DAYS, this.days);\r\n  };\r\n\r\n  checkPassedDays = () => {\r\n    for (let i = 0; i < store.monthStore.currentDay - 1; i++) {\r\n      const day = this.days[i];\r\n      day.passed = true;\r\n      day.habits.forEach(\r\n        (el) =>\r\n          !el.completed &&\r\n          !el.missed &&\r\n          store.statisticsStore.increaseMissedCount(el)\r\n      );\r\n    }\r\n    saveToStorage<Day[]>(DAYS, this.days);\r\n  };\r\n\r\n  renameHabit = (habit: string, newName: string) => {\r\n    if (\r\n      this.days.every(\r\n        (day) => !day.habits.find((el) => el.habitName === newName)\r\n      )\r\n    ) {\r\n      for (let i = 0; i < this.days.length; i++) {\r\n        const day = this.days[i];\r\n        day.habits = day.habits.map((el) =>\r\n          el.habitName === habit ? { ...el, habitName: newName } : el\r\n        );\r\n      }\r\n      saveToStorage<Day[]>(DAYS, this.days);\r\n    }\r\n  };\r\n\r\n  checkExistance = (newName: string) => {\r\n    if (\r\n      this.days.every((day) =>\r\n        day.habits.find((el) => el.habitName === newName)\r\n      )\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { DateTime } from 'luxon';\r\nimport { getFromStorage, MONTH, saveToStorage } from '../utils/utils';\r\nimport { Month } from '../models/month';\r\n\r\nexport class MonthStore {\r\n  currentMonth = '';\r\n  currentDay = DateTime.now().day;\r\n  reset = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  init = () => {\r\n    const data = getFromStorage<Month>(MONTH);\r\n    //first time with no data whatsoever\r\n    if (!data) {\r\n      this.currentMonth = DateTime.now().monthLong;\r\n      this.reset = false;\r\n      saveToStorage<Month>(MONTH, {\r\n        currentMonth: this.currentMonth,\r\n        reset: this.reset,\r\n      });\r\n      //data exists\r\n    } else if (data) {\r\n      this.currentMonth = data.currentMonth;\r\n      this.reset = data.reset;\r\n      if (this.checkNewMonth) {\r\n        //set reset flag to create new data\r\n        this.reset = true;\r\n        this.currentMonth = DateTime.now().monthLong;\r\n      }\r\n    }\r\n  };\r\n\r\n  get checkNewMonth() {\r\n    // check if current month equals the actual current month (now)\r\n    return this.currentMonth !== DateTime.now().monthLong;\r\n  }\r\n\r\n  setNewMonth = () => {\r\n    this.currentMonth = DateTime.now().monthLong;\r\n  };\r\n\r\n  clearCurrentMonth = () => {\r\n    this.currentMonth = DateTime.now().monthLong;\r\n    this.reset = false;\r\n    saveToStorage<Month>(MONTH, {\r\n      currentMonth: this.currentMonth,\r\n      reset: this.reset,\r\n    });\r\n  };\r\n}\r\n\r\nexport default MonthStore;\r\n","import { createContext, useContext } from 'react';\r\nimport { CreatedHabitsStore } from './createdHabitsStore';\r\nimport DayStore from './dayStore';\r\nimport ModalStore from './modalStore';\r\nimport { MonthStore } from './monthStore';\r\nimport StatisticsStore from './statisticsStore';\r\n\r\nexport interface Store {\r\n  dayStore: DayStore;\r\n  monthStore: MonthStore;\r\n  statisticsStore: StatisticsStore;\r\n  createdHabitsStore: CreatedHabitsStore;\r\n  modalStore: ModalStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  dayStore: new DayStore(),\r\n  monthStore: new MonthStore(),\r\n  statisticsStore: new StatisticsStore(),\r\n  createdHabitsStore: new CreatedHabitsStore(),\r\n  modalStore: new ModalStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n  return useContext(StoreContext);\r\n};\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Habit } from '../models/habit';\r\nimport { HabitStats } from '../models/habitStats';\r\nimport { Statistics } from '../models/statistics';\r\nimport { getFromStorage, saveToStorage, STATISTICS } from '../utils/utils';\r\nimport { store } from './store';\r\n\r\nexport default class StatisticsStore {\r\n  habits: HabitStats[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  loadStatistics = () => {\r\n    const data = getFromStorage<Statistics>(STATISTICS);\r\n    if (!data) {\r\n      const statistics: Statistics = {\r\n        habits: this.habits,\r\n      };\r\n      saveToStorage<Statistics>(STATISTICS, statistics);\r\n      return;\r\n    } else if (store.monthStore.checkNewMonth) {\r\n      this.habits = [];\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n      return;\r\n    }\r\n    this.habits = data.habits;\r\n  };\r\n\r\n  addToStats = (habit: Habit) => {\r\n    const h = this.findHabit(habit);\r\n    if (!h) {\r\n      this.habits.push({\r\n        habit,\r\n        toDo: 1,\r\n        completed: 0,\r\n        missed: 0,\r\n      });\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    } else {\r\n      h.toDo++;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  findHabit = (habit: Habit) => {\r\n    return this.habits.find((el) => el.habit.habitName === habit.habitName);\r\n  };\r\n\r\n  reduceHabitCount = (habit: Habit) => {\r\n    const h = this.findHabit(habit);\r\n    if (h) {\r\n      h.toDo--;\r\n      if (h.toDo === 0) {\r\n        this.habits = this.habits.filter(\r\n          (el) => el.habit.habitName !== h.habit.habitName\r\n        );\r\n        // saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n      } else {\r\n        saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n      }\r\n    }\r\n  };\r\n\r\n  increaseCompletedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    if (index === 0 || index) {\r\n      this.habits[index].completed++;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  reduceCompletedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    if (this.habits[index].habit && habit.completed) {\r\n      this.habits[index].completed--;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  increaseMissedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    if (this.habits[index].habit && !this.habits[index].completed) {\r\n      this.habits[index].missed++;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  reduceMissedCount = (habit: Habit) => {\r\n    const index = this.habits.findIndex(\r\n      (el) => el.habit.habitName === habit.habitName\r\n    );\r\n    if (this.habits[index].habit) {\r\n      this.habits[index].missed--;\r\n      saveToStorage<Statistics>(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  removeHabit = (habit: string) => {\r\n    this.habits = this.habits.filter((el) => el.habit.habitName !== habit);\r\n    saveToStorage(STATISTICS, { habits: this.habits });\r\n  };\r\n\r\n  clearStatistics = () => {\r\n    this.habits = [];\r\n    // this.loadStatistics();\r\n    saveToStorage(STATISTICS, { habits: this.habits });\r\n  };\r\n\r\n  renameHabit = (habit: string, newName: string) => {\r\n    if (!this.habits.find((el) => el.habit.habitName === newName)) {\r\n      this.habits = this.habits.map((el) =>\r\n        el.habit.habitName === habit\r\n          ? { ...el, habit: { ...el.habit, habitName: newName } }\r\n          : el\r\n      );\r\n      saveToStorage(STATISTICS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  checkExistance = (newName: string) => {\r\n    if (this.habits.find((el) => el.habit.habitName === newName)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { Habits } from '../models/habits';\r\nimport { getFromStorage, HABITS, saveToStorage } from '../utils/utils';\r\n\r\nexport class CreatedHabitsStore {\r\n  habits: string[] = [];\r\n  currentlySelectedHabit = '';\r\n  open = false;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (habit: string) => {\r\n    this.open = true;\r\n    this.currentlySelectedHabit = habit;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.open = false;\r\n    this.currentlySelectedHabit = '';\r\n  };\r\n\r\n  init = () => {\r\n    const data = getFromStorage<Habits>(HABITS);\r\n    if (!data) {\r\n      const habits: Habits = {\r\n        habits: this.habits,\r\n      };\r\n      saveToStorage<Habits>(HABITS, habits);\r\n      return;\r\n    }\r\n    this.habits = data.habits;\r\n  };\r\n\r\n  addHabit = (habit: string) => {\r\n    if (!this.habits.includes(habit)) {\r\n      this.habits.push(habit);\r\n      saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  removeHabit = (habit: string) => {\r\n    this.habits = this.habits.filter((el) => el !== habit);\r\n    saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n  };\r\n\r\n  clearHabits = () => {\r\n    this.habits = [];\r\n    saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n  };\r\n\r\n  renameHabit = (habit: string, newName: string) => {\r\n    if (!this.habits.includes(newName)) {\r\n      this.habits = this.habits.map((el) => (el === habit ? newName : el));\r\n      saveToStorage<Habits>(HABITS, { habits: this.habits });\r\n    }\r\n  };\r\n\r\n  checkExistance = (newName: string) => {\r\n    if (this.habits.includes(newName)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\nexport default class ModalStore {\r\n  open = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = () => {\r\n    this.open = true;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.open = false;\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { buttonStyles } from '../utils/utils';\r\n\r\ninterface Props {\r\n  handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\r\n  styling?: string;\r\n}\r\n\r\nconst AddHabitButton = ({ handleSubmit, styling }: Props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={`rounded-r-md ${buttonStyles('blue')} ${styling}`}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n      onClick={() => handleSubmit()}\r\n      type=\"submit\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AddHabitButton;\r\n","import React from 'react';\r\nimport { Popup } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  content: string;\r\n  styling?: string;\r\n}\r\n\r\nconst Info = ({ content, styling }: Props) => {\r\n  return (\r\n    <Popup\r\n      content={content}\r\n      on=\"click\"\r\n      position=\"top right\"\r\n      pinned\r\n      trigger={\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          type=\"button\"\r\n          className={`ml-auto mr-4 p-1 rounded-full cursor-pointer text-blue-700 hover:bg-blue-600 hover:text-blue-200 text-lg ${styling}`}\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import { Formik, Form, Field } from 'formik';\r\nimport React from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport AddHabitButton from './AddHabitButton';\r\nimport * as Yup from 'yup';\r\nimport { inputOutline } from '../utils/utils';\r\nimport Info from './Info';\r\n\r\nconst AddHabitForm = () => {\r\n  const { createdHabitsStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize={true}\r\n      initialValues={{ habitName: '', error: '' }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        createdHabitsStore.addHabit(values.habitName);\r\n        resetForm();\r\n      }}\r\n      validationSchema={Yup.object({\r\n        habitName: Yup.string().required('Please enter a Habit/Task'),\r\n      })}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <Form className=\"h-10 w-full mr-auto ml-4 text-center flex flex-row mt-4 justify-start relative \">\r\n          <Field\r\n            name=\"habitName\"\r\n            className={`${inputOutline()} w-1/2 z-30 text-center text-l font-light rounded-md\r\n                `}\r\n            placeholder=\"Enter Habit/Task...\"\r\n          />\r\n          <AddHabitButton\r\n            handleSubmit={handleSubmit}\r\n            styling={`w-10 h-10 ml-2`}\r\n          />\r\n          <Info\r\n            content=\"Enter habit or Task, then drag and drop it onto a day either below or above.\"\r\n            styling={`w-9 h-9 ml-auto mr-12`}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddHabitForm;\r\n","import React from 'react';\r\n\r\nconst BackToTop = () => {\r\n  return (\r\n    <a\r\n      href=\"#top\"\r\n      className=\"fixed fill-current border-2 border-blue-900 text-blue-900 md:bottom-8 md:right-8 bottom-5 right-5 bg-transparent md:min-w-min md:min-h-min  md:p-4 p-2 rounded-full transform hover:scale-125 duration-75 hover:bg-blue-900 hover:text-blue-200\"\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"md:h-10 md:w-10 w-6 h-6\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default BackToTop;\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { Habit } from '../models/habit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useStore } from '../stores/store';\r\nimport { Day } from '../models/day';\r\nimport { checkCompletion, checkAllCompletedHabits } from '../utils/utils';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface Props {\r\n  day: Day;\r\n}\r\n\r\nconst CalendarHeaderDayCard = ({ day }: Props) => {\r\n  const {\r\n    createdHabitsStore,\r\n    monthStore,\r\n    dayStore: { addHabit },\r\n    statisticsStore: { addToStats },\r\n  } = useStore();\r\n\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: 'habit',\r\n    drop: (item: { name: string }) => {\r\n      const habit: Habit = {\r\n        completed: false,\r\n        dayId: day.id,\r\n        habitName: item.name,\r\n        id: uuidv4(),\r\n        missed: false,\r\n      };\r\n      createdHabitsStore.addHabit(habit.habitName);\r\n      addHabit(day.id, habit);\r\n      addToStats(habit);\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const borderAroundCurrentDay = (day: Day) => {\r\n    if (\r\n      day.dayNumber === monthStore.currentDay &&\r\n      day.habits.length &&\r\n      day.habits.every((el) => el.completed)\r\n    ) {\r\n      return 'border-green-500 border-2 font-normal';\r\n    } else if (day.dayNumber === monthStore.currentDay) {\r\n      return 'border-pink-500 border-2 font-normal';\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <a\r\n        key={day.id}\r\n        ref={!day.passed ? drop : undefined}\r\n        className={`${\r\n          isOver && 'filter brightness-110 transform scale-150'\r\n        } w-min-min w-12 p-2 m-2 text-xl transform duration-100 hover:scale-110 hover:-translate-y-0.5 rounded-md shadow-md ${checkCompletion(\r\n          day,\r\n          monthStore.currentDay,\r\n          true,\r\n          false\r\n        )} ${borderAroundCurrentDay(day)}`}\r\n        href={`#${day.dayNumber}`}\r\n      >\r\n        <div\r\n          className={`${\r\n            day.habits.length &&\r\n            `w-4 h-4 ${\r\n              checkAllCompletedHabits(day)\r\n                ? 'bg-green-500'\r\n                : day.passed && checkAllCompletedHabits(day)\r\n                ? 'bg-green-500'\r\n                : day.passed\r\n                ? 'bg-blue-500'\r\n                : 'bg-red-500'\r\n            } absolute indicator rounded-full`\r\n          }`}\r\n        ></div>\r\n        {day.dayNumber}\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(CalendarHeaderDayCard);\r\n","import React from 'react';\r\nimport { Day } from '../models/day';\r\nimport CalendarHeaderDayCard from './CalendarHeaderDayCard';\r\n\r\ninterface Props {\r\n  days: Day[];\r\n}\r\n\r\nconst CalendarHeader = ({ days }: Props) => {\r\n  return (\r\n    <div\r\n      className={\r\n        'text-center my-20 flex flex-wrap justify-center items-center w-10/12 m-auto'\r\n      }\r\n    >\r\n      {days.map((day) => (\r\n        <CalendarHeaderDayCard key={day.id} day={day} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarHeader;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  styling?: string;\r\n  onClick?: React.MouseEventHandler<SVGSVGElement>;\r\n}\r\n\r\nconst DeleteButton = ({ styling, onClick }: Props) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={styling}\r\n      onClick={onClick}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  styling?: string;\r\n  onClick?: React.MouseEventHandler<SVGSVGElement>;\r\n}\r\n\r\nconst Checkmark = ({ styling, onClick }: Props) => {\r\n  return (\r\n    <svg\r\n      type=\"submit\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      onClick={onClick}\r\n      className={styling}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Checkmark;\r\n","import { Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport { buttonStyles, inputOutline } from '../utils/utils';\r\nimport Checkmark from './Checkmark';\r\nimport DeleteButton from './DeleteButton';\r\n\r\ninterface Props {\r\n  habit: string;\r\n  changeEditMode: () => void;\r\n}\r\n\r\nconst EditCreatedHabitForm = ({ habit, changeEditMode }: Props) => {\r\n  const { createdHabitsStore, dayStore, statisticsStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ newName: habit, error: '' }}\r\n      onSubmit={(values, { setErrors }) => {\r\n        const { newName } = values;\r\n        if (habit === newName) {\r\n          changeEditMode();\r\n          return;\r\n        }\r\n        if (\r\n          dayStore.checkExistance(newName) ||\r\n          createdHabitsStore.checkExistance(newName) ||\r\n          statisticsStore.checkExistance(newName)\r\n        ) {\r\n          setErrors({ error: 'Name already exists' });\r\n          return;\r\n        }\r\n        dayStore.renameHabit(habit, newName);\r\n        createdHabitsStore.renameHabit(habit, newName);\r\n        statisticsStore.renameHabit(habit, newName);\r\n      }}\r\n    >\r\n      {({ handleSubmit, errors }) => (\r\n        <Form className=\"relative flex flex-col p-2 z-50\">\r\n          <Field\r\n            autoFocus={true}\r\n            name=\"newName\"\r\n            className={`${inputOutline()} w-36 rounded-md text-center text-lg capitalize`}\r\n          />\r\n          <p className=\"absolute error-msg text-red-700\">{errors.error}</p>\r\n          <div className=\"absolute edit-mode flex flex-row\">\r\n            <div className=\"flex flex-row justify-center items-center \">\r\n              <Checkmark\r\n                styling={`h-6 w-6 mr-2 cursor-pointer  bg-green-300 hover:bg-green-600 transform duration-75 hover:scale-105 rounded-md ${buttonStyles(\r\n                  'green'\r\n                )}`}\r\n                onClick={() => handleSubmit()}\r\n              />\r\n              <DeleteButton\r\n                styling={`w-6 h-6 cursor-pointer bg-red-300 hover:bg-red-600 transform duration-75 hover:scale-105 rounded-md ${buttonStyles(\r\n                  'red'\r\n                )} `}\r\n                onClick={changeEditMode}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default EditCreatedHabitForm;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useState } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { useStore } from '../stores/store';\r\nimport { buttonStyles } from '../utils/utils';\r\nimport DeleteButton from './DeleteButton';\r\nimport EditCreatedHabitForm from './EditCreatedHabitForm';\r\n\r\ninterface Props {\r\n  habit: string;\r\n}\r\n\r\nconst CreatedHabitContainerElement = ({ habit }: Props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const { createdHabitsStore } = useStore();\r\n\r\n  const [, drag] = useDrag(() => ({\r\n    type: 'habit',\r\n    item: { name: habit },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const changeEditMode = () => {\r\n    setEditMode((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={!editMode ? drag : undefined}\r\n      className={`\r\n       pl-8 pr-8 bg-blue-400 relative text-blue-900 bg-opacity-50 rounded-full shadow text-center m-4  ${\r\n         !editMode && 'cursor-hand'\r\n       }  hover:bg-blue-300 transform hover:scale-110 duration-100 chdb-hover`}\r\n    >\r\n      {editMode ? (\r\n        <EditCreatedHabitForm changeEditMode={changeEditMode} habit={habit} />\r\n      ) : (\r\n        <p\r\n          onDoubleClick={changeEditMode}\r\n          className={`capitalize text-lg p-2 text-blue-800`}\r\n        >\r\n          {habit}\r\n        </p>\r\n      )}\r\n      <DeleteButton\r\n        styling={`h-7 w-7 absolute chdb hover:text-blue-500 cursor-pointer transform hover:scale-125 duration-75 ${buttonStyles(\r\n          'blue'\r\n        )}`}\r\n        onClick={() => createdHabitsStore.openModal(habit)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreatedHabitContainerElement);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport CreatedHabitContainerElement from './CreatedHabitContainerElement';\r\nimport Info from './Info';\r\n\r\nconst CreatedHabitsContainer = () => {\r\n  const { createdHabitsStore } = useStore();\r\n  const [sticky, setSticky] = useState('');\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.pageYOffset > 400 && createdHabitsStore.habits.length) {\r\n        setSticky('sticky');\r\n      } else {\r\n        setSticky('');\r\n      }\r\n    });\r\n  }, [createdHabitsStore.habits.length, createdHabitsStore.habits]);\r\n\r\n  return (\r\n    <div\r\n      className={`${sticky} rounded-md bg-blue-300 p-3 m-4 min-h-min min-h shadow-inner flex flex-row relative flex-wrap justify-center items-center`}\r\n    >\r\n      {createdHabitsStore.habits.map((el) => (\r\n        <CreatedHabitContainerElement key={el} habit={el} />\r\n      ))}\r\n      {createdHabitsStore.habits.length > 0 && (\r\n        <Info\r\n          content=\"Double click on title to edit.\"\r\n          styling={`absolute bottom-2 right-0 w-9 h-9`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreatedHabitsContainer);\r\n","import React from 'react';\r\nimport { Habit } from '../models/habit';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props {\r\n  habit: Habit;\r\n  passed: boolean;\r\n}\r\n\r\nconst Checkbox = ({ habit, passed }: Props) => {\r\n  const {\r\n    dayStore: { completeHabit },\r\n    statisticsStore: { reduceCompletedCount, increaseCompletedCount },\r\n  } = useStore();\r\n  return (\r\n    <label className=\"checkbox ml-2\">\r\n      <span className=\"checkbox__input\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          checked={habit.completed}\r\n          disabled={passed}\r\n          onChange={(e) => {\r\n            if (e.target.checked) {\r\n              increaseCompletedCount(habit);\r\n              completeHabit(habit.dayId, habit.id, true);\r\n            } else {\r\n              reduceCompletedCount(habit);\r\n              completeHabit(habit.dayId, habit.id, false);\r\n            }\r\n          }}\r\n        />\r\n        <span className=\"checkbox__control\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            aria-hidden=\"true\"\r\n            focusable=\"false\"\r\n          >\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"1\"\r\n              d=\"M1.73 12.91l6.37 6.37L22.79 4.59\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport { Habit } from '../models/habit';\r\nimport { useStore } from '../stores/store';\r\nimport DeleteButton from './DeleteButton';\r\n\r\ninterface Props {\r\n  completed: boolean | 0;\r\n  dayNumber: number;\r\n  habit: Habit;\r\n}\r\n\r\nconst DeleteHabitButton = ({ completed, dayNumber, habit }: Props) => {\r\n  const {\r\n    dayStore: { removeHabit },\r\n    statisticsStore: { reduceHabitCount, reduceCompletedCount },\r\n    monthStore: { currentDay },\r\n  } = useStore();\r\n\r\n  const deleteButtonStyles = (color: string) => {\r\n    return `fill-current hover:text-${color}-500 cursor-pointer transform hover:scale-125 duration-75`;\r\n  };\r\n\r\n  const handleClick = () => {\r\n    reduceCompletedCount(habit);\r\n    reduceHabitCount(habit);\r\n    removeHabit(habit.dayId, habit.id);\r\n  };\r\n\r\n  return (\r\n    <DeleteButton\r\n      styling={`h-10 w-10 mr-2 ${\r\n        completed\r\n          ? deleteButtonStyles('green')\r\n          : currentDay === dayNumber\r\n          ? deleteButtonStyles('pink')\r\n          : deleteButtonStyles('yellow')\r\n      }`}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteHabitButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Habit } from '../models/habit';\r\nimport { useStore } from '../stores/store';\r\nimport { shortenText } from '../utils/utils';\r\nimport Checkbox from './Checkbox';\r\nimport DeleteHabitButton from './DeleteHabitButton';\r\n\r\ninterface Props {\r\n  habit: Habit;\r\n  passed: boolean;\r\n  completed: boolean | 0;\r\n  dayNumber: number;\r\n}\r\n\r\nconst HabitEntry = ({ habit, passed, completed, dayNumber }: Props) => {\r\n  const {\r\n    monthStore: { currentDay },\r\n  } = useStore();\r\n\r\n  return (\r\n    <div\r\n      className={`w-full flex items-center shadow-inner rounded-r-md rounded-l-md habit h-10 ml-2 ${\r\n        completed\r\n          ? 'bg-green-200'\r\n          : currentDay === dayNumber\r\n          ? 'bg-pink-200'\r\n          : passed\r\n          ? 'bg-blue-200'\r\n          : 'bg-yellow-200'\r\n      }`}\r\n    >\r\n      <Checkbox passed={passed} habit={habit} />\r\n      <p\r\n        className={`capitalize text-base tracking-wide w-full ${\r\n          habit.completed && 'line-through'\r\n        }`}\r\n      >\r\n        {shortenText(habit.habitName, 50)}\r\n      </p>\r\n      {!passed && (\r\n        <DeleteHabitButton\r\n          completed={completed}\r\n          dayNumber={dayNumber}\r\n          habit={habit}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(HabitEntry);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Day } from '../models/day';\r\nimport { Habit } from '../models/habit';\r\nimport { useStore } from '../stores/store';\r\nimport { checkAllCompletedHabits, checkCompletion } from '../utils/utils';\r\nimport HabitEntry from './HabitEntry';\r\n\r\ninterface Props {\r\n  day: Day;\r\n  habits: Habit[];\r\n}\r\n\r\nconst DayCard = ({ day, habits }: Props) => {\r\n  const [{ isOver }, drop] = useDrop(() => ({\r\n    accept: 'habit',\r\n    drop: (item: { name: string }) => {\r\n      const habit: Habit = {\r\n        completed: false,\r\n        dayId: day.id,\r\n        habitName: item.name,\r\n        id: uuidv4(),\r\n        missed: false,\r\n      };\r\n      createdHabitsStore.addHabit(habit.habitName);\r\n      addHabit(day.id, habit);\r\n      addToStats(habit);\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }));\r\n\r\n  const { dayStore, statisticsStore, monthStore, createdHabitsStore } =\r\n    useStore();\r\n  const { addHabit } = dayStore;\r\n  const { addToStats } = statisticsStore;\r\n  const { currentDay } = monthStore;\r\n  const dayCardMonthStyle = (color: string) => {\r\n    return `border-r-2 border-${color}-400`;\r\n  };\r\n\r\n  const backgroundStyles = () => {\r\n    if (checkAllCompletedHabits(day)) {\r\n      return dayCardMonthStyle('green');\r\n    } else if (day.dayNumber === currentDay) {\r\n      return dayCardMonthStyle('pink');\r\n    } else if (day.passed && checkAllCompletedHabits(day)) {\r\n      return dayCardMonthStyle('green');\r\n    } else if (day.passed) {\r\n      return dayCardMonthStyle('blue');\r\n    }\r\n    return dayCardMonthStyle('yellow');\r\n  };\r\n\r\n  const cardNumberStyles =\r\n    'p-2  md:text-4xl text-3xl filter drop-shadow font-sans';\r\n\r\n  return (\r\n    <div\r\n      ref={!day.passed ? drop : undefined}\r\n      className={`${\r\n        isOver && 'filter brightness-110'\r\n      } md:m-4 md:p-4 p-4 m-2  min-height card-container justify-between rounded-md shadow-lg ${checkCompletion(\r\n        day,\r\n        monthStore.currentDay,\r\n        false\r\n      )}`}\r\n      id={`${day.dayNumber}`}\r\n    >\r\n      <div\r\n        className={`${backgroundStyles()} flex w-24 flex-col items-center justify-center h-full pr-4 `}\r\n      >\r\n        <h1 className={cardNumberStyles}>{day.weekDay}</h1>\r\n        <h1 className={cardNumberStyles}>{day.dayNumber}</h1>\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <div className=\"flex flex-row flex-wrap mb-auto\">\r\n          {habits.map((el) => (\r\n            <HabitEntry\r\n              completed={checkAllCompletedHabits(day)}\r\n              key={el.id}\r\n              habit={el}\r\n              passed={day.passed}\r\n              dayNumber={day.dayNumber}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(DayCard);\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  hidden: boolean;\r\n  setHidden: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst HideDaysButton = ({ hidden, setHidden }: Props) => {\r\n  return (\r\n    <div className=\"absolute left-0 hideButton\">\r\n      <button\r\n        onClick={() => setHidden(!hidden)}\r\n        className=\"bg-red-300 text-red-800 hover:bg-red-600 hover:text-red-200 p-3 rounded-md text-lg transform duration-75 hover:scale-105\"\r\n      >\r\n        {hidden ? (\r\n          <p className=\"flex flex-row justify-items-center items-center\">\r\n            Show hidden days\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 ml-2\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M14.707 12.293a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 111.414-1.414L9 14.586V3a1 1 0 012 0v11.586l2.293-2.293a1 1 0 011.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </p>\r\n        ) : (\r\n          <p className=\"flex flex-row justify-center items-center\">\r\n            Hide passed days\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6 ml-2\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M5.293 7.707a1 1 0 010-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L6.707 7.707a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </p>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HideDaysButton;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal, Button, ButtonProps, ModalProps } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  text: string;\r\n  open: boolean;\r\n  onYes:\r\n    | ((\r\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n        data: ButtonProps\r\n      ) => void)\r\n    | undefined;\r\n  onClose:\r\n    | ((\r\n        event: React.MouseEvent<HTMLElement, MouseEvent>,\r\n        data: ModalProps\r\n      ) => void)\r\n    | undefined;\r\n  onNo:\r\n    | ((\r\n        event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n        data: ButtonProps\r\n      ) => void)\r\n    | undefined;\r\n}\r\n\r\nconst ClearDataMotal = ({ text, onYes, onClose, onNo, open }: Props) => {\r\n  return (\r\n    <Modal size=\"mini\" open={open} onClose={onClose}>\r\n      <Modal.Header>\r\n        <p>{text}</p>\r\n      </Modal.Header>\r\n      <Modal.Actions>\r\n        <Button color=\"red\" inverted onClick={onYes}>\r\n          Yes\r\n        </Button>\r\n        <Button color=\"blue\" inverted onClick={onNo}>\r\n          No\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ClearDataMotal);\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  content: any;\r\n  color: string;\r\n  additionalStyle?: string;\r\n}\r\n\r\nconst StatisticsContent = ({ content, color, additionalStyle }: Props) => {\r\n  return (\r\n    <div\r\n      className={`bg-${color}-300 h-full p-3 text-${color}-800 flex-grow text-xl ${additionalStyle}`}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsContent;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  color: string;\r\n  text: string;\r\n}\r\n\r\nconst StatisticsLegend = ({ color, text }: Props) => {\r\n  return (\r\n    <div className=\"flex flex-row items-center m-2 \">\r\n      <div className={`w-6 h-6 bg-${color}-300 mr-1`}></div>\r\n      <p className=\"text-lg font-light\">{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticsLegend;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { useStore } from '../stores/store';\r\nimport { shortenText } from '../utils/utils';\r\nimport StatisticsContent from './StatisticsContent';\r\nimport StatisticsLegend from './StatisticsLegend';\r\n\r\nconst Statistics = () => {\r\n  const { statisticsStore, modalStore } = useStore();\r\n  const { openModal } = modalStore;\r\n\r\n  return (\r\n    <div className=\"bg-blue-300 bg-opacity-50 shadow-inner w-full rounded-md mt-4 ms:mt-0 md:mt-0\">\r\n      <button\r\n        onClick={openModal}\r\n        className=\"w-full font-light py-4 rounded-t-md text-xl tracking-widest bg-red-300 text-red-800 hover:bg-red-600 hover:text-red-200 text-lg\"\r\n      >\r\n        Clear\r\n      </button>\r\n      <div className=\"flex 2xl:flex-row flex-col  justify-evenly items-start mt-3 m-4 text-center\">\r\n        <StatisticsLegend text=\"Completed\" color=\"green\" />\r\n        <StatisticsLegend text=\"Missed\" color=\"red\" />\r\n        <StatisticsLegend text=\"Completion Rate\" color=\"blue\" />\r\n      </div>\r\n      {statisticsStore.habits.map(\r\n        ({ habit: { habitName, id }, toDo, completed, missed }) => (\r\n          <div\r\n            key={id}\r\n            className={`bg-indigo-300 text-indigo-800 m-6 mt-4 text-center rounded-md flex flex-col shadow-lg h-28`}\r\n          >\r\n            <div className=\"flex items-center justify-center flex-grow\">\r\n              <p className=\"text-2xl font-light tracking-widest capitalize\">\r\n                {shortenText(habitName, 15)}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex bg-purple-600 mt-auto justify-around items-center rounded-b-md\">\r\n              <StatisticsContent\r\n                content={`${completed}/${toDo}`}\r\n                color=\"green\"\r\n                additionalStyle=\"rounded-bl-md\"\r\n              />\r\n              <StatisticsContent content={`${missed}/${toDo}`} color=\"red\" />\r\n              <StatisticsContent\r\n                content={`${Math.round((completed / toDo) * 100)} %`}\r\n                color=\"blue\"\r\n                additionalStyle=\"rounded-br-md\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Statistics);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { TouchBackend } from 'react-dnd-touch-backend';\r\nimport './App.css';\r\nimport AddHabitForm from './components/AddHabitForm';\r\nimport BackToTop from './components/BackToTop';\r\nimport CalendarHeader from './components/CalendarHeader';\r\nimport CreatedHabitsContainer from './components/CreatedHabitsContainer';\r\nimport DayCard from './components/DayCard';\r\nimport HideDaysButton from './components/HideDaysButton';\r\nimport Modal from './components/Modal';\r\nimport Statistics from './components/Statistics';\r\nimport { Day } from './models/day';\r\nimport { useStore } from './stores/store';\r\nimport { clearLocalStorage } from './utils/utils';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nfunction App() {\r\n  const [days, setDays] = useState<Day[]>([]);\r\n  const [hidden, setHidden] = useState(true);\r\n  const {\r\n    dayStore,\r\n    modalStore,\r\n    monthStore,\r\n    statisticsStore,\r\n    createdHabitsStore,\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    monthStore.init();\r\n    createdHabitsStore.init();\r\n    statisticsStore.loadStatistics();\r\n    dayStore.generateDays();\r\n    dayStore.checkPassedDays();\r\n    setDays(dayStore.days);\r\n  }, [dayStore, monthStore, statisticsStore, createdHabitsStore]);\r\n\r\n  const onYesClearData = () => {\r\n    modalStore.closeModal();\r\n    clearLocalStorage();\r\n  };\r\n\r\n  const handleClick = (habit: string) => {\r\n    dayStore.clearDaysOfHabit(habit);\r\n    statisticsStore.removeHabit(habit);\r\n    createdHabitsStore.removeHabit(habit);\r\n    createdHabitsStore.closeModal();\r\n  };\r\n\r\n  return (\r\n    <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n      <p>I am on {isMobile ? 'Mobile' : 'Desktop'}</p>\r\n      <div className=\"bg-gradient-to-b from-blue-100 to-blue-200 pb-8\">\r\n        <Modal\r\n          onYes={onYesClearData}\r\n          text=\"Do you want to clear all data?\"\r\n          onNo={() => modalStore.closeModal()}\r\n          onClose={() => modalStore.closeModal()}\r\n          open={modalStore.open}\r\n        />\r\n        <Modal\r\n          open={createdHabitsStore.open}\r\n          text={`Clear all instances of ${createdHabitsStore.currentlySelectedHabit}`}\r\n          onYes={() => handleClick(createdHabitsStore.currentlySelectedHabit)}\r\n          onClose={() => createdHabitsStore.closeModal()}\r\n          onNo={() => createdHabitsStore.closeModal()}\r\n        />\r\n        <h1\r\n          id=\"top\"\r\n          className=\"font-sans italic tracking-widest text-indigo-700 font-normal underline text-7xl pt-10 text-center md:mb-10 md:pt-10 md:text-9xl\"\r\n        >\r\n          {monthStore.currentMonth}\r\n        </h1>\r\n        <CalendarHeader days={days} />\r\n        <div className=\"container w-full\">\r\n          <div className=\"flex relative flex-col bg-blue-300 w-full ms:w-auto shadow-inner bg-opacity-50 rounded-md p-1 md:p-8 small-screens\">\r\n            <AddHabitForm />\r\n            <CreatedHabitsContainer />\r\n            <HideDaysButton hidden={hidden} setHidden={setHidden} />\r\n            {days.map((day) =>\r\n              hidden && day.passed ? null : (\r\n                <DayCard key={day.id} day={day} habits={day.habits} />\r\n              )\r\n            )}\r\n          </div>\r\n          <Statistics />\r\n        </div>\r\n        <BackToTop />\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { store, StoreContext } from './stores/store';\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <App />\r\n  </StoreContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}